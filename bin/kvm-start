#!/bin/sh
[ -c /dev/kvm ] || mknod /dev/kvm c 10 232
[ -d /dev/net ] || mkdir /dev/net
[ -c /dev/net/tun ] || mknod /dev/net/tun c 10 200
[ -f /etc/mtab ] || ln -s /proc/mounts /etc/mtab
qemu-img create -f qcow2 -o backing_file=system.img system.qc2
[ -s data.img ] || {
    truncate --size 10G data.img
    yes | mkfs -t ext4 -L boot2docker-data data.img
}
[ -d /mnt ] || mkdir /mnt
iptables -t nat -A POSTROUTING -s 172.18.0.0/24 -o eth0 -j MASQUERADE
socat TCP-LISTEN:22,fork,reuseaddr TCP:172.18.0.2:22 &
socat TCP-LISTEN:4243,fork,reuseaddr TCP:172.18.0.2:4243 &

cat > cloudconfig <<EOF
#cloud-config
password: docker
chpasswd: { expire: False }
ssh_pwauth: True
runcmd:
  - cloud-init-per once dockerinstall curl https://get.docker.io/ | sh
  - cloud-init-per once dockerconfig echo 'DOCKER_OPTS="-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock"' >>/etc/default/docker
  - cloud-init-per once dockerrestart service docker restart
mounts:
  - [ hostshare, /mnt, "9p", "trans=virtio,version=9p2000.L", "0", "0" ]
EOF

cloud-localds cloudconfig.img cloudconfig

exec kvm -nographic -m 2048 -vnc :0 \
         -drive file=system.qc2,if=virtio \
         -drive file=data.img,if=virtio \
         -drive file=cloudconfig.img,if=virtio \
         -fsdev local,security_model=passthrough,id=fsdev0,path=/mnt -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_tag=hostshare \
         -device virtio-net,netdev=net0 -netdev tap,id=net0,script=/usr/local/bin/net-script,downscript=no
